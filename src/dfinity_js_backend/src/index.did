service: () -> {
    acceptDeliveryTender: (text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addCertification: (text, text) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addCompleteproductsDistributionToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addDriverIdToDeliveryDetails: (text, text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addDriverToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addFarmProduct: (text, text) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addPackagedDetails: (text, record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addPickedUpProduct: (text, text) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addProductsSuccesfulProcessing: (text, text) -> (variant {Ok:record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addQualification: (text, text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addVehicleToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    assignVehicle: (text, text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    checkIfProductPickedUp: (text) -> (variant {Ok:bool; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    completeDistributorPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; distributorReciever:principal; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeDriverPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; DistributorId:text; price:nat64; paid_at_block:opt nat64; distributorPayer:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeFarmerPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64; farmerReciever:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDeliveryDetails: (record {deliveryDescription:text; farmerId:text; distributorsId:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text}) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDeliveryTender: (record {additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; tenderTitle:text}) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDistributorsCompany: (record {YearsInOperation:text; logo:text; name:text; email:text; marketCoverage:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDriver: (record {contact:text; fullName:text; experience:text; licenseNo:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createFarmer: (record {contactInfo:text; farmSize:text; farmType:text; farmLocation:text; fullName:text; companyName:text; companyRegNo:text}) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createFarmerSalesAdvert: (record {farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64}) -> (variant {Ok:record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createProcessingCompany: (record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createProduct: (record {name:text; description:text; category:text; image:text}, text) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDistributorPay: (text) -> (variant {Ok:record {status:text; distributorReciever:principal; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDriverPay: (text, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; DistributorId:text; price:nat64; paid_at_block:opt nat64; distributorPayer:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveFarmerPay: (text) -> (variant {Ok:record {status:text; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64; farmerReciever:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createVehicle: (record {vehicleMake:text; vehicleType:text; vehicleRegNo:text; vehicleModel:text}, text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getAcceptedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getAcceptedDeliveryTenders: () -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getActiveDeliveryDetails: () -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getAddressFromPrincipal: (principal) -> (text) query;
    getAllDeliveryDetails: () -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getAllDeliveryTenders: () -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getAllDistributorsCompanies: () -> (vec record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}) query;
    getAllDrivers: () -> (vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}) query;
    getAllFarmerSalesAdverts: () -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getAllFarmers: () -> (vec record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}) query;
    getAllProcessingCompanies: () -> (vec record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}) query;
    getAllProducts: () -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getAllVehicles: () -> (vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}) query;
    getCompletedDeliveryDetailsForDistributorCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsForDriver: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsForProcessingCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsInProcessingCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getCompleteproductsDistributionInDistributorCompany: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getDeliveryDetails: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDeliveryDetailsAssignedToDriver: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getDeliveryDetailsPickedUp: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getDeliveryDetailsPickedUpForDistributorCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getDeliveryTender: (text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDeliveryTendersOfDistributorCompany: (text) -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getDeliveryTendersOfProcessingCompany: (text) -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getDistributorCompanyByOwner: () -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDistributorsCompany: (text) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriver: (text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverActiveDelivery: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwner: () -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwnerFilter: () -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverCompleteDelivery: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriversInDistributorCompany: (text) -> (vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}) query;
    getFarmer: (text) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getFarmerByOwner: () -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getFarmerSalesAdvert: (text) -> (variant {Ok:record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getFarmerSalesAdvertsApprovedByProcessorCompany: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSalesAdvertsApprovedForFarmer: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSalesAdvertsCompletedForFarmer: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSalesAdvertsOfFarmer: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSalesAdvertsOfProcessorCompany: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSalesAdvertsOfProduct: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getFarmerSoldProducts: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getGradedProductsForFarmer: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getNewDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getNewDeliveryDetailsInProcessingCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getNewProductsForFarmer: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getPackagedProductsForFarmer: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getPaidAdverts: (text) -> (vec record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}) query;
    getProcessingCompany: (text) -> (variant {Ok:record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getProcessingCompanyByOwner: () -> (variant {Ok:record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getProduct: (text) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getProductsSuccesfulProcessingInProcessingCompany: (text) -> (vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}) query;
    getRecentDeliveryDetailsAssignedToDriver: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderForDeliveryDetailsForDistributorCompany: (text, text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderForDeliveryDetailsForProcessingCompany: (text, text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getTenderedDeliveryDetailsInProcessingCompany: (text) -> (vec record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}) query;
    getVehicle: (text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getVehiclesByDistributorCompany: (text) -> (vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}) query;
    getVehiclesInDistributorCompany: (text) -> (vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}) query;
    gradeProduct: (record {productId:text; grade:text; quantity:nat64; price:nat64}) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markDeliveryDetailsAsCompleted: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markDeliveryDetailsAsPicked: (text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markFarmerSalesAdvertAsApproved: (text) -> (variant {Ok:record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markFarmerSalesAdvertAsFarmerPaid: (text) -> (variant {Ok:record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markProductAsFarmerSold: (text) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markProductAsPickedUp: (text) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryDate: (text, text) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryDetails: (text, record {deliveryDescription:text; farmerId:text; distributorsId:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text}) -> (variant {Ok:record {id:text; driverId:opt text; deliveryDescription:text; farmerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; productId:text; processorsId:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryTender: (text, record {additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; tenderTitle:text}) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; processorsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDistributorsCompany: (text, record {YearsInOperation:text; logo:text; name:text; email:text; marketCoverage:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; completeproductsDistribution:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDriver: (text, record {contact:text; fullName:text; experience:text; licenseNo:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateFarmer: (text, record {contactInfo:text; farmSize:text; farmType:text; farmLocation:text; fullName:text; companyName:text; companyRegNo:text}) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateFarmerRating: (text) -> (variant {Ok:record {id:text; contactInfo:text; farmSize:text; farmType:text; farmProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; farmLocation:text; owner:principal; fullName:text; farmerRating:nat64; certification:vec text; companyName:text; pickedUpProducts:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; companyRegNo:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateFarmerSalesAdvert: (text, record {farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64}) -> (variant {Ok:record {id:text; status:text; farmerId:text; processorCompanyId:text; productId:text; quantity:nat64; price:nat64; farmerPaid:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateProcessingCompany: (text, record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; YearsInOperation:text; owner:principal; logo:text; name:text; email:text; address:text; productsSuccesfulProcessing:vec record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateProduct: (text, record {name:text; description:text; category:text; image:text}) -> (variant {Ok:record {id:text; status:text; processingSuccesful:bool; owner:text; packaged:bool; name:text; description:text; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; price:nat64; farmerSold:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateVehicle: (text, record {vehicleMake:text; vehicleType:text; vehicleRegNo:text; vehicleModel:text}) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
